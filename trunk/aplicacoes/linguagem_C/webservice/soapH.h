/* soapH.h
   Generated by gSOAP 2.8.2 from mbatch_server.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#endif

#ifndef SOAP_TYPE___ns1__sentMessage
#define SOAP_TYPE___ns1__sentMessage (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__sentMessage(struct soap*, struct __ns1__sentMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__sentMessage(struct soap*, const struct __ns1__sentMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__sentMessage(struct soap*, const char*, int, const struct __ns1__sentMessage *, const char*);
SOAP_FMAC3 struct __ns1__sentMessage * SOAP_FMAC4 soap_in___ns1__sentMessage(struct soap*, const char*, struct __ns1__sentMessage *, const char*);

#ifndef soap_write___ns1__sentMessage
#define soap_write___ns1__sentMessage(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__sentMessage(soap, data), 0) || soap_put___ns1__sentMessage(soap, data, "-ns1:sentMessage", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__sentMessage(struct soap*, const struct __ns1__sentMessage *, const char*, const char*);

#ifndef soap_read___ns1__sentMessage
#define soap_read___ns1__sentMessage(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__sentMessage(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__sentMessage * SOAP_FMAC4 soap_get___ns1__sentMessage(struct soap*, struct __ns1__sentMessage *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__totalRegister
#define SOAP_TYPE___ns1__totalRegister (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__totalRegister(struct soap*, struct __ns1__totalRegister *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__totalRegister(struct soap*, const struct __ns1__totalRegister *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__totalRegister(struct soap*, const char*, int, const struct __ns1__totalRegister *, const char*);
SOAP_FMAC3 struct __ns1__totalRegister * SOAP_FMAC4 soap_in___ns1__totalRegister(struct soap*, const char*, struct __ns1__totalRegister *, const char*);

#ifndef soap_write___ns1__totalRegister
#define soap_write___ns1__totalRegister(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__totalRegister(soap, data), 0) || soap_put___ns1__totalRegister(soap, data, "-ns1:totalRegister", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__totalRegister(struct soap*, const struct __ns1__totalRegister *, const char*, const char*);

#ifndef soap_read___ns1__totalRegister
#define soap_read___ns1__totalRegister(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__totalRegister(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__totalRegister * SOAP_FMAC4 soap_get___ns1__totalRegister(struct soap*, struct __ns1__totalRegister *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__invalidRegister
#define SOAP_TYPE___ns1__invalidRegister (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__invalidRegister(struct soap*, struct __ns1__invalidRegister *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__invalidRegister(struct soap*, const struct __ns1__invalidRegister *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__invalidRegister(struct soap*, const char*, int, const struct __ns1__invalidRegister *, const char*);
SOAP_FMAC3 struct __ns1__invalidRegister * SOAP_FMAC4 soap_in___ns1__invalidRegister(struct soap*, const char*, struct __ns1__invalidRegister *, const char*);

#ifndef soap_write___ns1__invalidRegister
#define soap_write___ns1__invalidRegister(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__invalidRegister(soap, data), 0) || soap_put___ns1__invalidRegister(soap, data, "-ns1:invalidRegister", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__invalidRegister(struct soap*, const struct __ns1__invalidRegister *, const char*, const char*);

#ifndef soap_read___ns1__invalidRegister
#define soap_read___ns1__invalidRegister(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__invalidRegister(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__invalidRegister * SOAP_FMAC4 soap_get___ns1__invalidRegister(struct soap*, struct __ns1__invalidRegister *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__validRegister
#define SOAP_TYPE___ns1__validRegister (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__validRegister(struct soap*, struct __ns1__validRegister *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__validRegister(struct soap*, const struct __ns1__validRegister *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__validRegister(struct soap*, const char*, int, const struct __ns1__validRegister *, const char*);
SOAP_FMAC3 struct __ns1__validRegister * SOAP_FMAC4 soap_in___ns1__validRegister(struct soap*, const char*, struct __ns1__validRegister *, const char*);

#ifndef soap_write___ns1__validRegister
#define soap_write___ns1__validRegister(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__validRegister(soap, data), 0) || soap_put___ns1__validRegister(soap, data, "-ns1:validRegister", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__validRegister(struct soap*, const struct __ns1__validRegister *, const char*, const char*);

#ifndef soap_read___ns1__validRegister
#define soap_read___ns1__validRegister(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__validRegister(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__validRegister * SOAP_FMAC4 soap_get___ns1__validRegister(struct soap*, struct __ns1__validRegister *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__checkStatusMessage
#define SOAP_TYPE___ns1__checkStatusMessage (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__checkStatusMessage(struct soap*, struct __ns1__checkStatusMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__checkStatusMessage(struct soap*, const struct __ns1__checkStatusMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__checkStatusMessage(struct soap*, const char*, int, const struct __ns1__checkStatusMessage *, const char*);
SOAP_FMAC3 struct __ns1__checkStatusMessage * SOAP_FMAC4 soap_in___ns1__checkStatusMessage(struct soap*, const char*, struct __ns1__checkStatusMessage *, const char*);

#ifndef soap_write___ns1__checkStatusMessage
#define soap_write___ns1__checkStatusMessage(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__checkStatusMessage(soap, data), 0) || soap_put___ns1__checkStatusMessage(soap, data, "-ns1:checkStatusMessage", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__checkStatusMessage(struct soap*, const struct __ns1__checkStatusMessage *, const char*, const char*);

#ifndef soap_read___ns1__checkStatusMessage
#define soap_read___ns1__checkStatusMessage(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__checkStatusMessage(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__checkStatusMessage * SOAP_FMAC4 soap_get___ns1__checkStatusMessage(struct soap*, struct __ns1__checkStatusMessage *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__checkStatus
#define SOAP_TYPE___ns1__checkStatus (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__checkStatus(struct soap*, struct __ns1__checkStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__checkStatus(struct soap*, const struct __ns1__checkStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__checkStatus(struct soap*, const char*, int, const struct __ns1__checkStatus *, const char*);
SOAP_FMAC3 struct __ns1__checkStatus * SOAP_FMAC4 soap_in___ns1__checkStatus(struct soap*, const char*, struct __ns1__checkStatus *, const char*);

#ifndef soap_write___ns1__checkStatus
#define soap_write___ns1__checkStatus(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__checkStatus(soap, data), 0) || soap_put___ns1__checkStatus(soap, data, "-ns1:checkStatus", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__checkStatus(struct soap*, const struct __ns1__checkStatus *, const char*, const char*);

#ifndef soap_read___ns1__checkStatus
#define soap_read___ns1__checkStatus(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__checkStatus(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__checkStatus * SOAP_FMAC4 soap_get___ns1__checkStatus(struct soap*, struct __ns1__checkStatus *, const char*, const char*);

#ifndef SOAP_TYPE___ns1__send
#define SOAP_TYPE___ns1__send (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__send(struct soap*, struct __ns1__send *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__send(struct soap*, const struct __ns1__send *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__send(struct soap*, const char*, int, const struct __ns1__send *, const char*);
SOAP_FMAC3 struct __ns1__send * SOAP_FMAC4 soap_in___ns1__send(struct soap*, const char*, struct __ns1__send *, const char*);

#ifndef soap_write___ns1__send
#define soap_write___ns1__send(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns1__send(soap, data), 0) || soap_put___ns1__send(soap, data, "-ns1:send", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__send(struct soap*, const struct __ns1__send *, const char*, const char*);

#ifndef soap_read___ns1__send
#define soap_read___ns1__send(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__send(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns1__send * SOAP_FMAC4 soap_get___ns1__send(struct soap*, struct __ns1__send *, const char*, const char*);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#endif

#ifndef SOAP_TYPE_ns1__invalidRegisterResponse
#define SOAP_TYPE_ns1__invalidRegisterResponse (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__invalidRegisterResponse(struct soap*, struct ns1__invalidRegisterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__invalidRegisterResponse(struct soap*, const struct ns1__invalidRegisterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__invalidRegisterResponse(struct soap*, const char*, int, const struct ns1__invalidRegisterResponse *, const char*);
SOAP_FMAC3 struct ns1__invalidRegisterResponse * SOAP_FMAC4 soap_in_ns1__invalidRegisterResponse(struct soap*, const char*, struct ns1__invalidRegisterResponse *, const char*);

#ifndef soap_write_ns1__invalidRegisterResponse
#define soap_write_ns1__invalidRegisterResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__invalidRegisterResponse(soap, data), 0) || soap_put_ns1__invalidRegisterResponse(soap, data, "ns1:invalidRegisterResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__invalidRegisterResponse(struct soap*, const struct ns1__invalidRegisterResponse *, const char*, const char*);

#ifndef soap_read_ns1__invalidRegisterResponse
#define soap_read_ns1__invalidRegisterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__invalidRegisterResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__invalidRegisterResponse * SOAP_FMAC4 soap_get_ns1__invalidRegisterResponse(struct soap*, struct ns1__invalidRegisterResponse *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__invalidRegister
#define SOAP_TYPE_ns1__invalidRegister (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__invalidRegister(struct soap*, struct ns1__invalidRegister *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__invalidRegister(struct soap*, const struct ns1__invalidRegister *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__invalidRegister(struct soap*, const char*, int, const struct ns1__invalidRegister *, const char*);
SOAP_FMAC3 struct ns1__invalidRegister * SOAP_FMAC4 soap_in_ns1__invalidRegister(struct soap*, const char*, struct ns1__invalidRegister *, const char*);

#ifndef soap_write_ns1__invalidRegister
#define soap_write_ns1__invalidRegister(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__invalidRegister(soap, data), 0) || soap_put_ns1__invalidRegister(soap, data, "ns1:invalidRegister", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__invalidRegister(struct soap*, const struct ns1__invalidRegister *, const char*, const char*);

#ifndef soap_read_ns1__invalidRegister
#define soap_read_ns1__invalidRegister(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__invalidRegister(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__invalidRegister * SOAP_FMAC4 soap_get_ns1__invalidRegister(struct soap*, struct ns1__invalidRegister *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__sendResponse
#define SOAP_TYPE_ns1__sendResponse (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sendResponse(struct soap*, struct ns1__sendResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sendResponse(struct soap*, const struct ns1__sendResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendResponse(struct soap*, const char*, int, const struct ns1__sendResponse *, const char*);
SOAP_FMAC3 struct ns1__sendResponse * SOAP_FMAC4 soap_in_ns1__sendResponse(struct soap*, const char*, struct ns1__sendResponse *, const char*);

#ifndef soap_write_ns1__sendResponse
#define soap_write_ns1__sendResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__sendResponse(soap, data), 0) || soap_put_ns1__sendResponse(soap, data, "ns1:sendResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sendResponse(struct soap*, const struct ns1__sendResponse *, const char*, const char*);

#ifndef soap_read_ns1__sendResponse
#define soap_read_ns1__sendResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__sendResponse * SOAP_FMAC4 soap_get_ns1__sendResponse(struct soap*, struct ns1__sendResponse *, const char*, const char*);

#ifndef SOAP_TYPE_ns3__stringArray
#define SOAP_TYPE_ns3__stringArray (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns3__stringArray(struct soap*, struct ns3__stringArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns3__stringArray(struct soap*, const struct ns3__stringArray *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__stringArray(struct soap*, const char*, int, const struct ns3__stringArray *, const char*);
SOAP_FMAC3 struct ns3__stringArray * SOAP_FMAC4 soap_in_ns3__stringArray(struct soap*, const char*, struct ns3__stringArray *, const char*);

#ifndef soap_write_ns3__stringArray
#define soap_write_ns3__stringArray(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns3__stringArray(soap, data), 0) || soap_put_ns3__stringArray(soap, data, "ns3:stringArray", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__stringArray(struct soap*, const struct ns3__stringArray *, const char*, const char*);

#ifndef soap_read_ns3__stringArray
#define soap_read_ns3__stringArray(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__stringArray(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns3__stringArray * SOAP_FMAC4 soap_get_ns3__stringArray(struct soap*, struct ns3__stringArray *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__send
#define SOAP_TYPE_ns1__send (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__send(struct soap*, struct ns1__send *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__send(struct soap*, const struct ns1__send *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__send(struct soap*, const char*, int, const struct ns1__send *, const char*);
SOAP_FMAC3 struct ns1__send * SOAP_FMAC4 soap_in_ns1__send(struct soap*, const char*, struct ns1__send *, const char*);

#ifndef soap_write_ns1__send
#define soap_write_ns1__send(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__send(soap, data), 0) || soap_put_ns1__send(soap, data, "ns1:send", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__send(struct soap*, const struct ns1__send *, const char*, const char*);

#ifndef soap_read_ns1__send
#define soap_read_ns1__send(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__send(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__send * SOAP_FMAC4 soap_get_ns1__send(struct soap*, struct ns1__send *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__checkStatusResponse
#define SOAP_TYPE_ns1__checkStatusResponse (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__checkStatusResponse(struct soap*, struct ns1__checkStatusResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__checkStatusResponse(struct soap*, const struct ns1__checkStatusResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__checkStatusResponse(struct soap*, const char*, int, const struct ns1__checkStatusResponse *, const char*);
SOAP_FMAC3 struct ns1__checkStatusResponse * SOAP_FMAC4 soap_in_ns1__checkStatusResponse(struct soap*, const char*, struct ns1__checkStatusResponse *, const char*);

#ifndef soap_write_ns1__checkStatusResponse
#define soap_write_ns1__checkStatusResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__checkStatusResponse(soap, data), 0) || soap_put_ns1__checkStatusResponse(soap, data, "ns1:checkStatusResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__checkStatusResponse(struct soap*, const struct ns1__checkStatusResponse *, const char*, const char*);

#ifndef soap_read_ns1__checkStatusResponse
#define soap_read_ns1__checkStatusResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__checkStatusResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__checkStatusResponse * SOAP_FMAC4 soap_get_ns1__checkStatusResponse(struct soap*, struct ns1__checkStatusResponse *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__checkStatus
#define SOAP_TYPE_ns1__checkStatus (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__checkStatus(struct soap*, struct ns1__checkStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__checkStatus(struct soap*, const struct ns1__checkStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__checkStatus(struct soap*, const char*, int, const struct ns1__checkStatus *, const char*);
SOAP_FMAC3 struct ns1__checkStatus * SOAP_FMAC4 soap_in_ns1__checkStatus(struct soap*, const char*, struct ns1__checkStatus *, const char*);

#ifndef soap_write_ns1__checkStatus
#define soap_write_ns1__checkStatus(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__checkStatus(soap, data), 0) || soap_put_ns1__checkStatus(soap, data, "ns1:checkStatus", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__checkStatus(struct soap*, const struct ns1__checkStatus *, const char*, const char*);

#ifndef soap_read_ns1__checkStatus
#define soap_read_ns1__checkStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__checkStatus(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__checkStatus * SOAP_FMAC4 soap_get_ns1__checkStatus(struct soap*, struct ns1__checkStatus *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__validRegisterResponse
#define SOAP_TYPE_ns1__validRegisterResponse (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__validRegisterResponse(struct soap*, struct ns1__validRegisterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__validRegisterResponse(struct soap*, const struct ns1__validRegisterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__validRegisterResponse(struct soap*, const char*, int, const struct ns1__validRegisterResponse *, const char*);
SOAP_FMAC3 struct ns1__validRegisterResponse * SOAP_FMAC4 soap_in_ns1__validRegisterResponse(struct soap*, const char*, struct ns1__validRegisterResponse *, const char*);

#ifndef soap_write_ns1__validRegisterResponse
#define soap_write_ns1__validRegisterResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__validRegisterResponse(soap, data), 0) || soap_put_ns1__validRegisterResponse(soap, data, "ns1:validRegisterResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__validRegisterResponse(struct soap*, const struct ns1__validRegisterResponse *, const char*, const char*);

#ifndef soap_read_ns1__validRegisterResponse
#define soap_read_ns1__validRegisterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__validRegisterResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__validRegisterResponse * SOAP_FMAC4 soap_get_ns1__validRegisterResponse(struct soap*, struct ns1__validRegisterResponse *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__validRegister
#define SOAP_TYPE_ns1__validRegister (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__validRegister(struct soap*, struct ns1__validRegister *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__validRegister(struct soap*, const struct ns1__validRegister *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__validRegister(struct soap*, const char*, int, const struct ns1__validRegister *, const char*);
SOAP_FMAC3 struct ns1__validRegister * SOAP_FMAC4 soap_in_ns1__validRegister(struct soap*, const char*, struct ns1__validRegister *, const char*);

#ifndef soap_write_ns1__validRegister
#define soap_write_ns1__validRegister(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__validRegister(soap, data), 0) || soap_put_ns1__validRegister(soap, data, "ns1:validRegister", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__validRegister(struct soap*, const struct ns1__validRegister *, const char*, const char*);

#ifndef soap_read_ns1__validRegister
#define soap_read_ns1__validRegister(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__validRegister(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__validRegister * SOAP_FMAC4 soap_get_ns1__validRegister(struct soap*, struct ns1__validRegister *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__sentMessageResponse
#define SOAP_TYPE_ns1__sentMessageResponse (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sentMessageResponse(struct soap*, struct ns1__sentMessageResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sentMessageResponse(struct soap*, const struct ns1__sentMessageResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sentMessageResponse(struct soap*, const char*, int, const struct ns1__sentMessageResponse *, const char*);
SOAP_FMAC3 struct ns1__sentMessageResponse * SOAP_FMAC4 soap_in_ns1__sentMessageResponse(struct soap*, const char*, struct ns1__sentMessageResponse *, const char*);

#ifndef soap_write_ns1__sentMessageResponse
#define soap_write_ns1__sentMessageResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__sentMessageResponse(soap, data), 0) || soap_put_ns1__sentMessageResponse(soap, data, "ns1:sentMessageResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sentMessageResponse(struct soap*, const struct ns1__sentMessageResponse *, const char*, const char*);

#ifndef soap_read_ns1__sentMessageResponse
#define soap_read_ns1__sentMessageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sentMessageResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__sentMessageResponse * SOAP_FMAC4 soap_get_ns1__sentMessageResponse(struct soap*, struct ns1__sentMessageResponse *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__sentMessage
#define SOAP_TYPE_ns1__sentMessage (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__sentMessage(struct soap*, struct ns1__sentMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__sentMessage(struct soap*, const struct ns1__sentMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sentMessage(struct soap*, const char*, int, const struct ns1__sentMessage *, const char*);
SOAP_FMAC3 struct ns1__sentMessage * SOAP_FMAC4 soap_in_ns1__sentMessage(struct soap*, const char*, struct ns1__sentMessage *, const char*);

#ifndef soap_write_ns1__sentMessage
#define soap_write_ns1__sentMessage(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__sentMessage(soap, data), 0) || soap_put_ns1__sentMessage(soap, data, "ns1:sentMessage", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__sentMessage(struct soap*, const struct ns1__sentMessage *, const char*, const char*);

#ifndef soap_read_ns1__sentMessage
#define soap_read_ns1__sentMessage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sentMessage(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__sentMessage * SOAP_FMAC4 soap_get_ns1__sentMessage(struct soap*, struct ns1__sentMessage *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__checkStatusMessageResponse
#define SOAP_TYPE_ns1__checkStatusMessageResponse (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__checkStatusMessageResponse(struct soap*, struct ns1__checkStatusMessageResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__checkStatusMessageResponse(struct soap*, const struct ns1__checkStatusMessageResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__checkStatusMessageResponse(struct soap*, const char*, int, const struct ns1__checkStatusMessageResponse *, const char*);
SOAP_FMAC3 struct ns1__checkStatusMessageResponse * SOAP_FMAC4 soap_in_ns1__checkStatusMessageResponse(struct soap*, const char*, struct ns1__checkStatusMessageResponse *, const char*);

#ifndef soap_write_ns1__checkStatusMessageResponse
#define soap_write_ns1__checkStatusMessageResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__checkStatusMessageResponse(soap, data), 0) || soap_put_ns1__checkStatusMessageResponse(soap, data, "ns1:checkStatusMessageResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__checkStatusMessageResponse(struct soap*, const struct ns1__checkStatusMessageResponse *, const char*, const char*);

#ifndef soap_read_ns1__checkStatusMessageResponse
#define soap_read_ns1__checkStatusMessageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__checkStatusMessageResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__checkStatusMessageResponse * SOAP_FMAC4 soap_get_ns1__checkStatusMessageResponse(struct soap*, struct ns1__checkStatusMessageResponse *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__checkStatusMessage
#define SOAP_TYPE_ns1__checkStatusMessage (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__checkStatusMessage(struct soap*, struct ns1__checkStatusMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__checkStatusMessage(struct soap*, const struct ns1__checkStatusMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__checkStatusMessage(struct soap*, const char*, int, const struct ns1__checkStatusMessage *, const char*);
SOAP_FMAC3 struct ns1__checkStatusMessage * SOAP_FMAC4 soap_in_ns1__checkStatusMessage(struct soap*, const char*, struct ns1__checkStatusMessage *, const char*);

#ifndef soap_write_ns1__checkStatusMessage
#define soap_write_ns1__checkStatusMessage(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__checkStatusMessage(soap, data), 0) || soap_put_ns1__checkStatusMessage(soap, data, "ns1:checkStatusMessage", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__checkStatusMessage(struct soap*, const struct ns1__checkStatusMessage *, const char*, const char*);

#ifndef soap_read_ns1__checkStatusMessage
#define soap_read_ns1__checkStatusMessage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__checkStatusMessage(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__checkStatusMessage * SOAP_FMAC4 soap_get_ns1__checkStatusMessage(struct soap*, struct ns1__checkStatusMessage *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__BatchException
#define SOAP_TYPE_ns1__BatchException (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__BatchException(struct soap*, struct ns1__BatchException *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__BatchException(struct soap*, const struct ns1__BatchException *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__BatchException(struct soap*, const char*, int, const struct ns1__BatchException *, const char*);
SOAP_FMAC3 struct ns1__BatchException * SOAP_FMAC4 soap_in_ns1__BatchException(struct soap*, const char*, struct ns1__BatchException *, const char*);

#ifndef soap_write_ns1__BatchException
#define soap_write_ns1__BatchException(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__BatchException(soap, data), 0) || soap_put_ns1__BatchException(soap, data, "ns1:BatchException", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__BatchException(struct soap*, const struct ns1__BatchException *, const char*, const char*);

#ifndef soap_read_ns1__BatchException
#define soap_read_ns1__BatchException(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__BatchException(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__BatchException * SOAP_FMAC4 soap_get_ns1__BatchException(struct soap*, struct ns1__BatchException *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__totalRegisterResponse
#define SOAP_TYPE_ns1__totalRegisterResponse (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__totalRegisterResponse(struct soap*, struct ns1__totalRegisterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__totalRegisterResponse(struct soap*, const struct ns1__totalRegisterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__totalRegisterResponse(struct soap*, const char*, int, const struct ns1__totalRegisterResponse *, const char*);
SOAP_FMAC3 struct ns1__totalRegisterResponse * SOAP_FMAC4 soap_in_ns1__totalRegisterResponse(struct soap*, const char*, struct ns1__totalRegisterResponse *, const char*);

#ifndef soap_write_ns1__totalRegisterResponse
#define soap_write_ns1__totalRegisterResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__totalRegisterResponse(soap, data), 0) || soap_put_ns1__totalRegisterResponse(soap, data, "ns1:totalRegisterResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__totalRegisterResponse(struct soap*, const struct ns1__totalRegisterResponse *, const char*, const char*);

#ifndef soap_read_ns1__totalRegisterResponse
#define soap_read_ns1__totalRegisterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__totalRegisterResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__totalRegisterResponse * SOAP_FMAC4 soap_get_ns1__totalRegisterResponse(struct soap*, struct ns1__totalRegisterResponse *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__totalRegister
#define SOAP_TYPE_ns1__totalRegister (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__totalRegister(struct soap*, struct ns1__totalRegister *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__totalRegister(struct soap*, const struct ns1__totalRegister *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__totalRegister(struct soap*, const char*, int, const struct ns1__totalRegister *, const char*);
SOAP_FMAC3 struct ns1__totalRegister * SOAP_FMAC4 soap_in_ns1__totalRegister(struct soap*, const char*, struct ns1__totalRegister *, const char*);

#ifndef soap_write_ns1__totalRegister
#define soap_write_ns1__totalRegister(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__totalRegister(soap, data), 0) || soap_put_ns1__totalRegister(soap, data, "ns1:totalRegister", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__totalRegister(struct soap*, const struct ns1__totalRegister *, const char*, const char*);

#ifndef soap_read_ns1__totalRegister
#define soap_read_ns1__totalRegister(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__totalRegister(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__totalRegister * SOAP_FMAC4 soap_get_ns1__totalRegister(struct soap*, struct ns1__totalRegister *, const char*, const char*);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTons1__sentMessageResponse
#define SOAP_TYPE_PointerTons1__sentMessageResponse (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sentMessageResponse(struct soap*, struct ns1__sentMessageResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sentMessageResponse(struct soap*, const char *, int, struct ns1__sentMessageResponse *const*, const char *);
SOAP_FMAC3 struct ns1__sentMessageResponse ** SOAP_FMAC4 soap_in_PointerTons1__sentMessageResponse(struct soap*, const char*, struct ns1__sentMessageResponse **, const char*);

#ifndef soap_write_PointerTons1__sentMessageResponse
#define soap_write_PointerTons1__sentMessageResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__sentMessageResponse(soap, data), 0) || soap_put_PointerTons1__sentMessageResponse(soap, data, "ns1:sentMessageResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sentMessageResponse(struct soap*, struct ns1__sentMessageResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__sentMessageResponse
#define soap_read_PointerTons1__sentMessageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__sentMessageResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__sentMessageResponse ** SOAP_FMAC4 soap_get_PointerTons1__sentMessageResponse(struct soap*, struct ns1__sentMessageResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__sentMessage
#define SOAP_TYPE_PointerTons1__sentMessage (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sentMessage(struct soap*, struct ns1__sentMessage *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sentMessage(struct soap*, const char *, int, struct ns1__sentMessage *const*, const char *);
SOAP_FMAC3 struct ns1__sentMessage ** SOAP_FMAC4 soap_in_PointerTons1__sentMessage(struct soap*, const char*, struct ns1__sentMessage **, const char*);

#ifndef soap_write_PointerTons1__sentMessage
#define soap_write_PointerTons1__sentMessage(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__sentMessage(soap, data), 0) || soap_put_PointerTons1__sentMessage(soap, data, "ns1:sentMessage", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sentMessage(struct soap*, struct ns1__sentMessage *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__sentMessage
#define soap_read_PointerTons1__sentMessage(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__sentMessage(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__sentMessage ** SOAP_FMAC4 soap_get_PointerTons1__sentMessage(struct soap*, struct ns1__sentMessage **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__totalRegisterResponse
#define SOAP_TYPE_PointerTons1__totalRegisterResponse (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__totalRegisterResponse(struct soap*, struct ns1__totalRegisterResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__totalRegisterResponse(struct soap*, const char *, int, struct ns1__totalRegisterResponse *const*, const char *);
SOAP_FMAC3 struct ns1__totalRegisterResponse ** SOAP_FMAC4 soap_in_PointerTons1__totalRegisterResponse(struct soap*, const char*, struct ns1__totalRegisterResponse **, const char*);

#ifndef soap_write_PointerTons1__totalRegisterResponse
#define soap_write_PointerTons1__totalRegisterResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__totalRegisterResponse(soap, data), 0) || soap_put_PointerTons1__totalRegisterResponse(soap, data, "ns1:totalRegisterResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__totalRegisterResponse(struct soap*, struct ns1__totalRegisterResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__totalRegisterResponse
#define soap_read_PointerTons1__totalRegisterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__totalRegisterResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__totalRegisterResponse ** SOAP_FMAC4 soap_get_PointerTons1__totalRegisterResponse(struct soap*, struct ns1__totalRegisterResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__totalRegister
#define SOAP_TYPE_PointerTons1__totalRegister (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__totalRegister(struct soap*, struct ns1__totalRegister *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__totalRegister(struct soap*, const char *, int, struct ns1__totalRegister *const*, const char *);
SOAP_FMAC3 struct ns1__totalRegister ** SOAP_FMAC4 soap_in_PointerTons1__totalRegister(struct soap*, const char*, struct ns1__totalRegister **, const char*);

#ifndef soap_write_PointerTons1__totalRegister
#define soap_write_PointerTons1__totalRegister(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__totalRegister(soap, data), 0) || soap_put_PointerTons1__totalRegister(soap, data, "ns1:totalRegister", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__totalRegister(struct soap*, struct ns1__totalRegister *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__totalRegister
#define soap_read_PointerTons1__totalRegister(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__totalRegister(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__totalRegister ** SOAP_FMAC4 soap_get_PointerTons1__totalRegister(struct soap*, struct ns1__totalRegister **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__invalidRegisterResponse
#define SOAP_TYPE_PointerTons1__invalidRegisterResponse (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__invalidRegisterResponse(struct soap*, struct ns1__invalidRegisterResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__invalidRegisterResponse(struct soap*, const char *, int, struct ns1__invalidRegisterResponse *const*, const char *);
SOAP_FMAC3 struct ns1__invalidRegisterResponse ** SOAP_FMAC4 soap_in_PointerTons1__invalidRegisterResponse(struct soap*, const char*, struct ns1__invalidRegisterResponse **, const char*);

#ifndef soap_write_PointerTons1__invalidRegisterResponse
#define soap_write_PointerTons1__invalidRegisterResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__invalidRegisterResponse(soap, data), 0) || soap_put_PointerTons1__invalidRegisterResponse(soap, data, "ns1:invalidRegisterResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__invalidRegisterResponse(struct soap*, struct ns1__invalidRegisterResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__invalidRegisterResponse
#define soap_read_PointerTons1__invalidRegisterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__invalidRegisterResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__invalidRegisterResponse ** SOAP_FMAC4 soap_get_PointerTons1__invalidRegisterResponse(struct soap*, struct ns1__invalidRegisterResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__invalidRegister
#define SOAP_TYPE_PointerTons1__invalidRegister (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__invalidRegister(struct soap*, struct ns1__invalidRegister *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__invalidRegister(struct soap*, const char *, int, struct ns1__invalidRegister *const*, const char *);
SOAP_FMAC3 struct ns1__invalidRegister ** SOAP_FMAC4 soap_in_PointerTons1__invalidRegister(struct soap*, const char*, struct ns1__invalidRegister **, const char*);

#ifndef soap_write_PointerTons1__invalidRegister
#define soap_write_PointerTons1__invalidRegister(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__invalidRegister(soap, data), 0) || soap_put_PointerTons1__invalidRegister(soap, data, "ns1:invalidRegister", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__invalidRegister(struct soap*, struct ns1__invalidRegister *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__invalidRegister
#define soap_read_PointerTons1__invalidRegister(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__invalidRegister(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__invalidRegister ** SOAP_FMAC4 soap_get_PointerTons1__invalidRegister(struct soap*, struct ns1__invalidRegister **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__validRegisterResponse
#define SOAP_TYPE_PointerTons1__validRegisterResponse (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__validRegisterResponse(struct soap*, struct ns1__validRegisterResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__validRegisterResponse(struct soap*, const char *, int, struct ns1__validRegisterResponse *const*, const char *);
SOAP_FMAC3 struct ns1__validRegisterResponse ** SOAP_FMAC4 soap_in_PointerTons1__validRegisterResponse(struct soap*, const char*, struct ns1__validRegisterResponse **, const char*);

#ifndef soap_write_PointerTons1__validRegisterResponse
#define soap_write_PointerTons1__validRegisterResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__validRegisterResponse(soap, data), 0) || soap_put_PointerTons1__validRegisterResponse(soap, data, "ns1:validRegisterResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__validRegisterResponse(struct soap*, struct ns1__validRegisterResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__validRegisterResponse
#define soap_read_PointerTons1__validRegisterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__validRegisterResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__validRegisterResponse ** SOAP_FMAC4 soap_get_PointerTons1__validRegisterResponse(struct soap*, struct ns1__validRegisterResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__validRegister
#define SOAP_TYPE_PointerTons1__validRegister (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__validRegister(struct soap*, struct ns1__validRegister *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__validRegister(struct soap*, const char *, int, struct ns1__validRegister *const*, const char *);
SOAP_FMAC3 struct ns1__validRegister ** SOAP_FMAC4 soap_in_PointerTons1__validRegister(struct soap*, const char*, struct ns1__validRegister **, const char*);

#ifndef soap_write_PointerTons1__validRegister
#define soap_write_PointerTons1__validRegister(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__validRegister(soap, data), 0) || soap_put_PointerTons1__validRegister(soap, data, "ns1:validRegister", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__validRegister(struct soap*, struct ns1__validRegister *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__validRegister
#define soap_read_PointerTons1__validRegister(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__validRegister(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__validRegister ** SOAP_FMAC4 soap_get_PointerTons1__validRegister(struct soap*, struct ns1__validRegister **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__checkStatusMessageResponse
#define SOAP_TYPE_PointerTons1__checkStatusMessageResponse (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__checkStatusMessageResponse(struct soap*, struct ns1__checkStatusMessageResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__checkStatusMessageResponse(struct soap*, const char *, int, struct ns1__checkStatusMessageResponse *const*, const char *);
SOAP_FMAC3 struct ns1__checkStatusMessageResponse ** SOAP_FMAC4 soap_in_PointerTons1__checkStatusMessageResponse(struct soap*, const char*, struct ns1__checkStatusMessageResponse **, const char*);

#ifndef soap_write_PointerTons1__checkStatusMessageResponse
#define soap_write_PointerTons1__checkStatusMessageResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__checkStatusMessageResponse(soap, data), 0) || soap_put_PointerTons1__checkStatusMessageResponse(soap, data, "ns1:checkStatusMessageResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__checkStatusMessageResponse(struct soap*, struct ns1__checkStatusMessageResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__checkStatusMessageResponse
#define soap_read_PointerTons1__checkStatusMessageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__checkStatusMessageResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__checkStatusMessageResponse ** SOAP_FMAC4 soap_get_PointerTons1__checkStatusMessageResponse(struct soap*, struct ns1__checkStatusMessageResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__checkStatusMessage
#define SOAP_TYPE_PointerTons1__checkStatusMessage (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__checkStatusMessage(struct soap*, struct ns1__checkStatusMessage *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__checkStatusMessage(struct soap*, const char *, int, struct ns1__checkStatusMessage *const*, const char *);
SOAP_FMAC3 struct ns1__checkStatusMessage ** SOAP_FMAC4 soap_in_PointerTons1__checkStatusMessage(struct soap*, const char*, struct ns1__checkStatusMessage **, const char*);

#ifndef soap_write_PointerTons1__checkStatusMessage
#define soap_write_PointerTons1__checkStatusMessage(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__checkStatusMessage(soap, data), 0) || soap_put_PointerTons1__checkStatusMessage(soap, data, "ns1:checkStatusMessage", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__checkStatusMessage(struct soap*, struct ns1__checkStatusMessage *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__checkStatusMessage
#define soap_read_PointerTons1__checkStatusMessage(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__checkStatusMessage(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__checkStatusMessage ** SOAP_FMAC4 soap_get_PointerTons1__checkStatusMessage(struct soap*, struct ns1__checkStatusMessage **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__checkStatusResponse
#define SOAP_TYPE_PointerTons1__checkStatusResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__checkStatusResponse(struct soap*, struct ns1__checkStatusResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__checkStatusResponse(struct soap*, const char *, int, struct ns1__checkStatusResponse *const*, const char *);
SOAP_FMAC3 struct ns1__checkStatusResponse ** SOAP_FMAC4 soap_in_PointerTons1__checkStatusResponse(struct soap*, const char*, struct ns1__checkStatusResponse **, const char*);

#ifndef soap_write_PointerTons1__checkStatusResponse
#define soap_write_PointerTons1__checkStatusResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__checkStatusResponse(soap, data), 0) || soap_put_PointerTons1__checkStatusResponse(soap, data, "ns1:checkStatusResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__checkStatusResponse(struct soap*, struct ns1__checkStatusResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__checkStatusResponse
#define soap_read_PointerTons1__checkStatusResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__checkStatusResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__checkStatusResponse ** SOAP_FMAC4 soap_get_PointerTons1__checkStatusResponse(struct soap*, struct ns1__checkStatusResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__checkStatus
#define SOAP_TYPE_PointerTons1__checkStatus (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__checkStatus(struct soap*, struct ns1__checkStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__checkStatus(struct soap*, const char *, int, struct ns1__checkStatus *const*, const char *);
SOAP_FMAC3 struct ns1__checkStatus ** SOAP_FMAC4 soap_in_PointerTons1__checkStatus(struct soap*, const char*, struct ns1__checkStatus **, const char*);

#ifndef soap_write_PointerTons1__checkStatus
#define soap_write_PointerTons1__checkStatus(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__checkStatus(soap, data), 0) || soap_put_PointerTons1__checkStatus(soap, data, "ns1:checkStatus", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__checkStatus(struct soap*, struct ns1__checkStatus *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__checkStatus
#define soap_read_PointerTons1__checkStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__checkStatus(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__checkStatus ** SOAP_FMAC4 soap_get_PointerTons1__checkStatus(struct soap*, struct ns1__checkStatus **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__sendResponse
#define SOAP_TYPE_PointerTons1__sendResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sendResponse(struct soap*, struct ns1__sendResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sendResponse(struct soap*, const char *, int, struct ns1__sendResponse *const*, const char *);
SOAP_FMAC3 struct ns1__sendResponse ** SOAP_FMAC4 soap_in_PointerTons1__sendResponse(struct soap*, const char*, struct ns1__sendResponse **, const char*);

#ifndef soap_write_PointerTons1__sendResponse
#define soap_write_PointerTons1__sendResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__sendResponse(soap, data), 0) || soap_put_PointerTons1__sendResponse(soap, data, "ns1:sendResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sendResponse(struct soap*, struct ns1__sendResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__sendResponse
#define soap_read_PointerTons1__sendResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__sendResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__sendResponse ** SOAP_FMAC4 soap_get_PointerTons1__sendResponse(struct soap*, struct ns1__sendResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__send
#define SOAP_TYPE_PointerTons1__send (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__send(struct soap*, struct ns1__send *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__send(struct soap*, const char *, int, struct ns1__send *const*, const char *);
SOAP_FMAC3 struct ns1__send ** SOAP_FMAC4 soap_in_PointerTons1__send(struct soap*, const char*, struct ns1__send **, const char*);

#ifndef soap_write_PointerTons1__send
#define soap_write_PointerTons1__send(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__send(soap, data), 0) || soap_put_PointerTons1__send(soap, data, "ns1:send", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__send(struct soap*, struct ns1__send *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__send
#define soap_read_PointerTons1__send(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__send(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__send ** SOAP_FMAC4 soap_get_PointerTons1__send(struct soap*, struct ns1__send **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__BatchException
#define SOAP_TYPE_PointerTons1__BatchException (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__BatchException(struct soap*, struct ns1__BatchException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__BatchException(struct soap*, const char *, int, struct ns1__BatchException *const*, const char *);
SOAP_FMAC3 struct ns1__BatchException ** SOAP_FMAC4 soap_in_PointerTons1__BatchException(struct soap*, const char*, struct ns1__BatchException **, const char*);

#ifndef soap_write_PointerTons1__BatchException
#define soap_write_PointerTons1__BatchException(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__BatchException(soap, data), 0) || soap_put_PointerTons1__BatchException(soap, data, "ns1:BatchException", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__BatchException(struct soap*, struct ns1__BatchException *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__BatchException
#define soap_read_PointerTons1__BatchException(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__BatchException(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__BatchException ** SOAP_FMAC4 soap_get_PointerTons1__BatchException(struct soap*, struct ns1__BatchException **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostring
#define SOAP_TYPE_PointerTostring (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostring(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostring(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTostring(struct soap*, const char*, char ***, const char*);

#ifndef soap_write_PointerTostring
#define soap_write_PointerTostring(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostring(soap, data), 0) || soap_put_PointerTostring(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostring(struct soap*, char **const*, const char*, const char*);

#ifndef soap_read_PointerTostring
#define soap_read_PointerTostring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostring(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTostring(struct soap*, char ***, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons3__stringArray
#define SOAP_TYPE_PointerTons3__stringArray (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__stringArray(struct soap*, struct ns3__stringArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__stringArray(struct soap*, const char *, int, struct ns3__stringArray *const*, const char *);
SOAP_FMAC3 struct ns3__stringArray ** SOAP_FMAC4 soap_in_PointerTons3__stringArray(struct soap*, const char*, struct ns3__stringArray **, const char*);

#ifndef soap_write_PointerTons3__stringArray
#define soap_write_PointerTons3__stringArray(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons3__stringArray(soap, data), 0) || soap_put_PointerTons3__stringArray(soap, data, "ns3:stringArray", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__stringArray(struct soap*, struct ns3__stringArray *const*, const char*, const char*);

#ifndef soap_read_PointerTons3__stringArray
#define soap_read_PointerTons3__stringArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__stringArray(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns3__stringArray ** SOAP_FMAC4 soap_get_PointerTons3__stringArray(struct soap*, struct ns3__stringArray **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
